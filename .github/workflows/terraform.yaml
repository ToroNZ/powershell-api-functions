name: Run Terraform

on:
  workflow_dispatch:
  push:
    paths:
      - "tf/**"

defaults:
  run:
    working-directory: tf

jobs:
  deployPROD:
    name: "Deploy Demo"
    environment: demo
    runs-on: ubuntu-latest

    env:
      TF_IN_AUTOMATION: true
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENTID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTIONID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANTID }}
      TARGET_ENVIRONMENT: demo

    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2

      - name: Get SNAT -input
        run: |
          PUBLIC_IP=$(curl -Ls icanhazip.com)
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform validate
        run: terraform validate
        env:
          TF_VAR_PUBLIC_IP: ${{ env.PUBLIC_IP }}
          TF_VAR_CLIENTID: ${{ secrets.AZURE_CLIENTID }}

      - name: Select environment workspace
        run: terraform workspace select -or-create $TARGET_ENVIRONMENT

      - name: Generate plan
        run:  terraform plan -out=plan.tfplan
        env:
          TF_VAR_PUBLIC_IP: ${{ env.PUBLIC_IP }}
          TF_VAR_CLIENTID: ${{ secrets.AZURE_CLIENTID }}

      - name: Show plan
        run: terraform show plan.tfplan

      - name: Apply plan
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -input=false plan.tfplan
